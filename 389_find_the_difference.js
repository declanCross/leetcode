// You are given two strings s and t.

// String t is generated by random shuffling string s and then add one more letter at a random position.

// Return the letter that was added to t.
/**
 * @param {string} s
 * @param {string} t
 * @return {character}
 */
//solved dec solution
//t:O(n) s:O(n)
const findTheDifference = (s, t) => {
	//create function that returns the extra character from s to t.
	let mapS = {}; //initialize mapS object.
	let mapT = {}; //initialize mapT object.

	for (char of s) {
		//iterate through string s, looking at each character,
		if (!mapS[char]) {
			//if mapS does not have a key of the current character,
			mapS[char] = 1; //assign a key of the character to a value of 1.
		}
		mapS[char]++; //if mapS DOES have a key of the current character, increment that key's value by 1.
	}
	for (char of t) {
		//iterate through string t,
		if (!mapT[char]) {
			//if mapT does not have a key of the current character,
			mapT[char] = 1; //assign a key of the character to a value of 1.
		}
		mapT[char]++; //if mapT DOES have a key of the current character, increment that key's value by 1.
	}

	for (let char of t) {
		//iterate through t,
		if (!s.includes(char)) return char; //if string s does not have the current character, return that character.
		if (mapS[char] !== mapT[char]) return char; //if mapS and mapT have different values for the current character, return character.
	}
};

console.log(findTheDifference("abcd", "abcde")); //e
// Example 1:
// Input: s = "abcd", t = "abcde"
// Output: "e"
// Explanation: 'e' is the letter that was added.

console.log(findTheDifference("", "y")); //y
// Example 2:
// Input: s = "", t = "y"
// Output: "y"

console.log(findTheDifference("a", "aa")); //a

// Constraints:
// 0 <= s.length <= 1000
// t.length == s.length + 1
// s and t consist of lowercase English letters.
